/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/books': {
    /**
     * Get all books
     * @description Retrieve a list of all books in the database
     */
    get: operations['getAllBooks'];
    /**
     * Add a new book
     * @description Add a new book to the database
     */
    post: operations['addBook'];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: never;
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  /**
   * Get all books
   * @description Retrieve a list of all books in the database
   */
  getAllBooks: {
    responses: {
      /** @description A list of books */
      200: {
        content: {
          'application/json': {
            /** @example 1 */
            id?: string;
            /** @example The Great Gatsby */
            title?: string;
            /** @example F. Scott Fitzgerald */
            author?: string;
            /** @example 1925 */
            year?: number;
            /** @example Fiction */
            genre?: string;
          }[];
        };
      };
      /** @description Internal server error */
      500: {
        content: never;
      };
    };
  };
  /**
   * Add a new book
   * @description Add a new book to the database
   */
  addBook: {
    requestBody: {
      content: {
        'application/json': {
          /** @example The Great Gatsby */
          title: string;
          /** @example F. Scott Fitzgerald */
          author: string;
          /** @example 1925 */
          year?: number;
          /** @example Fiction */
          genre?: string;
        };
      };
    };
    responses: {
      /** @description Book created */
      201: {
        content: {
          'application/json': {
            /** @example 1 */
            id?: string;
          };
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Internal server error */
      500: {
        content: never;
      };
    };
  };
}
